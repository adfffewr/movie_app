{"version":3,"sources":["assets/popcorn.jpg","Components/Section.js","Components/Loader.js","Components/Error.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Error","text","prototype","PropTypes","string","isRequired","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","number","bool","HomePresenter","nowPlaying","popular","upcoming","error","loading","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","moviesApi","method","url","params","api_key","language","movieDetail","append_to_response","search","term","query","encodeURIComponent","TVApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","e","preventDefault","searchByTerm","target","a","showResults","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parsedId","parseInt","isNaN","Header","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.89fb327c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.23b3db02.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom:25px;\n    }\n`;\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight:600;\n    \n`;\nconst Grid = styled.div`\n    margin-top:25px;\n    display:grid;\n    grid-template-columns:repeat(auto-fill , 125px);\n    grid-gap:25px;\n`;\n\nconst Section = ({title , children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n); \n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.node),\n      PropTypes.node\n    ])\n};\n\nexport default Section;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height:100vh;\n    width:100vw;\n    display : flex;\n    justify-content:center;\n    font-size:32px;\n    margin-top:20px;\n\n`;\n\nconst Loader = () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">Loader</span>\n    </Container>\n)\n\nexport default Loader;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n    font-weight:600;\n`;\n\nconst Error = ({text , color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nError.prototype = {\n    Text : PropTypes.string.isRequired,\n    color : PropTypes.string.isRequired\n}\n\nexport default Error;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-size:12px;\n`;\nconst Image = styled.div`\n    /* background-image:url( ${props => `https://image.tmdb.org/t/p/w300${props.bgUrl}` }); */\n    background-image:url( ${props => props.bgUrl });\n    height:180px;\n    background-size:cover;\n    border-radius:4px;\n    background-position:center center;\n    transition:opacity 0.1s linear;\n`;\nconst Rating = styled.span`\n    position:absolute;\n    bottom:5px;\n    right:5px;\n    opacity:0;\n    transition:opacity 0.1s linear;\n`;\nconst ImageContainer = styled.div`\n    margin-bottom:5px;\n    position: relative;\n    &:hover{\n        ${Image} {\n            opacity:0.3;\n        }\n        ${Rating} {\n            opacity:1;\n        }\n    }\n`;\nconst Title = styled.span`\n    display:block;\n    margin-bottom:3px;\n`;\nconst Year = styled.span`\n    font-size:10px;\n    color:rgba(255,255,255,0.5);\n`;\n\nconst Poster = ({id , imageUrl , title , rating , year , isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer >\n                <Image bgUrl={imageUrl \n                    ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                    : require(\"../assets/popcorn.jpg\")}></Image>\n                <Rating>\n                    <span>별점</span>\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>\n                {title.length > 15 ? `${title.substring(0,15)} ...` : title }\n            </Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n)\n\nPoster.prototype = {\n    id : PropTypes.number.isRequired,\n    imageUrl : PropTypes.string,\n    title : PropTypes.string.isRequired,\n    rating : PropTypes.number,\n    year : PropTypes.string,\n    isMovie : PropTypes.bool\n\n}\n\nexport default Poster;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Error from 'Components/Error';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({nowPlaying , popular ,upcoming ,error ,loading}) => (\n    <>\n    <Helmet>\n        <title>Movies | App </title>\n    </Helmet>\n    {loading ? (\n        <Loader></Loader> \n    ) : (\n    <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n                {nowPlaying.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.original_title}\n                        imageUrl={movie.poster_path}\n                        rating={movie.vote_average}\n                        isMovie={true}\n                        year={movie.release_date.substring(0,4)}\n                    >\n                    </Poster>\n                ))}\n            </Section>\n        )}\n\n        {upcoming && upcoming.length > 0 && (\n            <Section title=\"upcoming Movie\">\n                {upcoming.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.original_title}\n                        imageUrl={movie.poster_path}\n                        rating={movie.vote_average}\n                        isMovie={true}\n                        year={movie.release_date.substring(0,4)}\n                    >\n                    </Poster>\n                ))}\n            </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n            <Section title=\"popular Movie\">\n                {popular.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        title={movie.original_title}\n                        imageUrl={movie.poster_path}\n                        rating={movie.vote_average}\n                        isMovie={true}\n                        year={movie.release_date.substring(0,4)}\n                    >\n                    </Poster>\n                ))}\n            </Section>\n        )}\n        {error && <Error color=\"#e74c3c\" text={error}></Error>}\n    </Container>\n    )}\n    </>\n)\n\nHomePresenter.propTypes = {\n    nowPlaying : PropTypes.array,\n    popular : PropTypes.array,\n    upcoming : PropTypes.array,\n    error : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n}\n\nexport default HomePresenter;","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL : 'https://api.themoviedb.org/3',\n});\n\n// api.get(\"tv/popular\")\n\nexport const moviesApi = {\n    nowPlaying : () => {\n        return api({\n            method: 'GET',\n            url: '/movie/now_playing',  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US'\n            }, // 값을 넘긴다\n        })\n    },\n    upcoming : () => {\n        return api({\n            method: 'GET',\n            url: '/movie/upcoming',  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US'\n            }, // 값을 넘긴다\n        })\n    },\n    popular : () => {\n        return api({\n            method: 'GET',\n            url: '/movie/popular',  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US'\n            }, // 값을 넘긴다\n        })\n    },\n    movieDetail : (id) => {\n        return api({\n            method: 'GET',\n            url: `/movie/${id}`,  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n                append_to_response : 'videos'\n            }, // 값을 넘긴다\n        })\n    },\n    search : (term) => {\n        return api({\n            method: 'GET',\n            url: `/search/movie`,  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n                query : encodeURIComponent(term)\n            }, // 값을 넘긴다\n        })\n    },\n}\n\nexport const TVApi = {\n    topRated : () => {\n        return api({\n            method: 'GET',\n            url: `/tv/top_rated`,  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n            }, // 값을 넘긴다\n        })\n    },\n    popular : () => {\n        return api({\n            method: 'GET',\n            url: '/tv/popular',  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n            }, // 값을 넘긴다\n        })\n    },\n    airingToday : () => {\n        return api({\n            method: 'GET',\n            url: `/tv/airing_today`,  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n            }, // 값을 넘긴다\n        })\n    },\n    showDetail : (id) => {\n        return api({\n            method: 'GET',\n            url: `/tv/${id}`,  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n                append_to_response : 'videos'\n            }, // 값을 넘긴다\n        })\n    },\n    search : (term) => {\n        return api({\n            method: 'GET',\n            url: `/search/tv`,  // api 통신 상세 주소\n            params : { \n                api_key : 'a992d1fae6c06b990f53908e421ee199',\n                language : 'en-US',\n                query : encodeURIComponent(term)\n            }, // 값을 넘긴다\n        })\n    },\n}\n\n// export default api","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer","import React from 'react';\nimport HomePresenter from './HomePresenter';\nimport { moviesApi } from 'api'\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying : null,\n        upcoming : null,\n        popular : null,\n        error : null,\n        loading : true\n    };\n\n    async componentDidMount(){\n        try{\n            const {data : { results : nowPlaying} } = await moviesApi.nowPlaying();\n            const {data : { results : upcoming} } = await moviesApi.upcoming();\n            const {data : { results : popular} } = await moviesApi.popular();\n            // throw Error();\n            this.setState({\n                nowPlaying : nowPlaying,  // 위와 아래는 같은 코드이다.\n                upcoming,\n                popular\n            })\n        } catch {\n            this.setState({\n                error : '에러 입니다.'\n            })\n        } finally {\n            this.setState({\n                loading : false,\n\n            })\n        }\n    }\n\n    render() {\n        const { nowPlaying , upcoming , popular , error , loading } = this.state\n        console.log(this.state)\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying} \n                upcoming={upcoming} \n                popular={popular} \n                error={error}\n                loading={loading}\n            />\n        )\n    }\n}\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Error from 'Components/Error';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({topRated , popular ,airingToday ,error ,loading}) => (\n    <>\n    <Helmet>\n        <title>TV Shows | App </title>\n    </Helmet>\n    {loading ? (\n        <Loader></Loader>\n    ) : (\n    <Container>\n        {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n                {topRated.map( show => (\n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        title={show.original_name}\n                        imageUrl={show.poster_path}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0,4)}\n                    >\n                    </Poster>\n                ))}\n            </Section>\n        )}\n\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n                {popular.map( show => (\n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        title={show.original_name}\n                        imageUrl={show.poster_path}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0,4)}\n                    >\n                    </Poster>\n                ))}\n            </Section>\n        )}\n\n        {airingToday && airingToday.length > 0 && (\n            <Section title=\"AiringToday Shows\">\n                {airingToday.map( show => (\n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        title={show.original_name}\n                        imageUrl={show.poster_path}\n                        rating={show.vote_average}\n                        year={show.first_air_date.substring(0,4)}\n                    >\n                    </Poster>\n                ))}\n            </Section>\n        )}\n        {error && <Error color=\"#e74c3c\" text={error}></Error>}\n    </Container>\n    )}\n    </>\n)\n    \n\nTVPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    error : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n}\n\nexport default TVPresenter;","import TVContainer from './TVContainer';\n\nexport default TVContainer;","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { TVApi } from 'api';\n\nexport default class extends React.Component{\n    state = {\n        topRated : null,\n        popular : null,\n        airingToday : null,\n        error : null,\n        loading : true\n    }\n\n    async componentDidMount(){\n        try{\n            const {data : { results : topRated } } = await TVApi.topRated();\n            const {data : { results : popular} } = await TVApi.popular();\n            const {data : { results : airingToday } } = await TVApi.airingToday();\n            this.setState({\n                topRated,\n                popular,\n                airingToday\n            })\n        } catch {\n            this.setState({\n                error : '에러 입니다.'\n            })\n        } finally {\n            this.setState({\n                loading : false\n            })\n        }\n    }\n\n    render() {\n        const { topRated , popular , airingToday , error , loading } = this.state;\n        console.log(this.state)\n        return (\n        <TVPresenter \n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            error={error}\n            loading={loading}\n        />\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Error from 'Components/Error';\nimport Poster from 'Components/Poster';\n\nconst Container = styled.div`\n    padding:20px;\n`;\nconst Form = styled.form`\n    margin-bottom:50px;\n`;\nconst Input = styled.input`\n    all:unset;\n    font-size:23px;\n    width:100%;\n`;\n\nconst SearchPresenter = ({\n    movieResults , \n    tvResults  ,\n    error ,\n    loading , \n    searchTerm , \n    handleSubmit,\n    updateTerm,\n    }) => (\n    <Container>\n        <Helmet>\n            <title>Search | App </title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"검색...\" value={searchTerm} onChange={updateTerm}></Input>\n        </Form>\n        {loading ? <Loader></Loader> : <>\n            {movieResults && movieResults.length> 0 && (\n                <Section title=\"movie Result\">\n                    {movieResults.map( movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id}\n                            title={movie.original_title}\n                            imageUrl={movie.poster_path}\n                            rating={movie.vote_average}\n                            isMovie={true}\n                            year={movie.release_date.substring(0,4)}\n                        >\n                        </Poster>\n                    ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length> 0 && (\n                <Section title=\"tv Result\">\n                    {tvResults.map( show => (\n                        <Poster \n                            key={show.id}\n                            id={show.id}\n                            title={show.original_name}\n                            imageUrl={show.poster_path}\n                            rating={show.vote_average}\n                            year={show.first_air_date.substring(0,4)}\n                        >\n                        </Poster>\n                    ))}\n                </Section>\n            )}\n            {error && <Error color=\"#e74c3c\" text={error}></Error>}\n            {tvResults && movieResults && tvResults.length === 0 & movieResults.length === 0 && (\n                <Error color=\"#95a5a6\" text=\"존재하지 않는 페이지 입니다.\"></Error>\n            )}\n        </>}\n\n    </Container>\n)\n\nSearchPresenter.propTypes = {\n    movieResults : PropTypes.array,\n    tvResults : PropTypes.array,\n    error : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n    searchTerm : PropTypes.string,\n    handleSubmit : PropTypes.func.isRequired,\n    updateTerm : PropTypes.func.isRequired,\n}\n\nexport default SearchPresenter;","import SearchContainer from './SearchContainer';\n\n\nexport default SearchContainer;","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi, TVApi } from 'api';\n\nexport default class extends React.Component{\n    state = {\n        movieResults : null,\n        tvResults : null,\n        searchTerm : '',\n        error : null,\n        loading : false\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== '') {\n            this.searchByTerm()\n        }\n    };\n\n    updateTerm = (e) => {\n        const { \n            target : { value } \n        } = e;\n        console.log(value)\n        this.setState({\n            searchTerm : value\n        })\n\n    }\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({\n            loading : true\n        })\n        try{\n            // throw Error();\n            const {data : { results : movieResults } }  = await moviesApi.search(searchTerm);\n            const {data : { results : showResults } }   = await TVApi.search(searchTerm);\n            this.setState({\n                movieResults ,\n                tvResults : showResults\n            })\n        } catch{\n            this.setState({\n                error : '검색 에러 입니다.'\n            })\n        } finally {\n            this.setState({\n                loading : false\n            })\n        }\n\n    }\n\n    render() {\n        const { movieResults, tvResults, searchTerm, error , loading } = this.state;\n        console.log(this.state)\n        return (\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\n\nconst Container = styled.div`\n    height:calc(100vh - 50px);\n    width:100%;\n    position:relative;\n    padding:50px;\n`;\nconst Backdrop = styled.div`\n    position:absolute;\n    left:0;\n    top:0;\n    width:100%;\n    height:100%;\n    background-image:url(${props => props.bgImage});\n    background-position:center center;\n    background-size:cover;\n    filter:blur(3px);\n    opacity:0.3;\n    z-index:0;\n`;\nconst Content = styled.div`\n    display:flex;\n    width:100%;\n    height:100%;\n    position:relative;\n    z-index:1;\n`;\nconst Cover = styled.div`\n    width:30%;\n    background-image:url(${props => props.bgImage});\n    background-position:center center;\n    background-size:cover;\n    height:100%;\n    border-radius:5px;\n`;\nconst Data = styled.div`\n    width:70%;\n    margin-left:10px;\n`;\nconst Title = styled.h3`\n    font-size:32px;\n    margin-bottom:10px;\n`\nconst ItemContainer = styled.div`\n    margin:20px 0;\n`;\nconst Item = styled.span`\n\n`;\nconst Divider = styled.span`\n    margin:0 10px;\n`;\nconst Overview = styled.p`\n    font-size:12px;\n    opacity:0.7;\n    line-height:1.5;\n    width:50%;\n`;\n\n\n\nconst DetailPresenter = ({result ,error ,loading}) => (\n    loading ? (\n        <>\n        <Helmet>\n            <title>Loading | App</title>\n        </Helmet>\n        <Loader></Loader>\n        </>\n    ) : (\n        <Container>\n            <Helmet>\n                <title>\n                {result.original_title \n                    ? result.original_title\n                    : result.original_name} | App\n                </title>\n            </Helmet>\n            <Backdrop \n                bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n            >\n            </Backdrop>\n            <Content>\n                <Cover\n                   bgImage={\n                       result.poster_path\n                       ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                       : require(\"../../assets/popcorn.jpg\")\n                   } \n                >\n                </Cover>\n                <Data>\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                   <ItemContainer>\n                        <Item>\n                            {result.release_date \n                            ? result.release_date.substring(0 , 4) \n                            : result.first_air_date.substring(0 , 4)}\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result.runtime \n                            ? result.runtime \n                            : result.episode_run_time[0]} min\n                        </Item>\n                        <Divider>•</Divider>\n                        <Item>\n                            {result.genres && result.genres.map((genre , index) => \n                                index === result.genres.length -1\n                                ? genre.name\n                                : `${genre.name} / `\n                            )}\n                        </Item>\n                   </ItemContainer>\n                   <Overview>\n                       {result.overview}\n                   </Overview>\n                </Data>\n            </Content>\n        </Container>\n    )\n)\n\nDetailPresenter.propTypes = {\n    result : PropTypes.object,\n    error : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n}\n\nexport default DetailPresenter;","import DetailContainer from './DetailContainer'\n\nexport default DetailContainer;","import React from 'react';\nimport DetailPresenter from './DetailPresenter';\nimport { moviesApi, TVApi } from 'api';\n\nexport default class extends React.Component{\n    constructor(props) {\n        super(props);\n        const {\n            location : { pathname }\n        } = props;\n        this.state = {\n            result : null,\n            error : null,\n            loading : true,\n            isMovie : pathname.includes('/movie/')\n        };\n    }\n    \n\n    async componentDidMount() {\n        // console.log(this.props.match.params.id)\n        const { \n            match : {\n                params : {id}\n            } ,\n            history : { push },\n        } = this.props\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        \n        if( isNaN(parsedId) ) {\n            return push('/')\n        }\n        let result = null;\n        try{\n            if(isMovie) {\n                ({data : result } = await moviesApi.movieDetail(parsedId) )\n            } else {\n                ({data : result } = await TVApi.showDetail(parsedId) )\n            }\n        } catch {\n            this.setState({ error : '디테일 오류 입니다.' })\n        } finally {\n            this.setState({ loading : false , result })\n        }\n    }\n\n    render() {\n        // console.log(this.props)\n        const { result  , error , loading } = this.state\n        // console.log(result)\n        return <DetailPresenter \n        result={result}\n        error={error}\n        loading={loading}>\n        </DetailPresenter>\n    }\n}","import React from 'react';\nimport { Link , withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\n\n\nconst Header = styled.header`\n    color:#FFF;\n    position:fixed;\n    top:0;\n    left:0;\n    width:100%;\n    height:50px;\n    display:flex;\n    align-items:center;\n    padding:0 10px;\n    background-color:rgba(20,20,20, 0.8);\n    box-shadow: 0px 1px 5px 2px rgba(0,0,0,0.8);\n`;\n\nconst List = styled.ul`\n    display : flex;\n`;\n\nconst Item = styled.li`\n    width:80px;\n    height:50px;\n    text-align:center;\n    border-bottom:3px solid ${props => (props.current ? '#3498db' : 'transparent')};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height:50px;\n    display:flex;\n    align-items:center;\n    justify-content:center;\n\n`;\n\nconst HeaderTag = ({location : { pathname }}) => (\n  <Header>\n    <List>\n      <Item current={pathname === '/'}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === '/tv'}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === '/search'}>\n        <SLink to=\"/search\">search</SLink>\n      </Item>\n    </List>\n  </Header>\n)\n\n// const HeaderTag = (props) => (\n//     <Header>\n//         {console.log(props)}\n//         <List>\n//             <Item >\n//                 <SLink to=\"/\">Movies</SLink>\n//             </Item>\n//             <Item >\n//                 <SLink to=\"/tv\">TV</SLink>\n//             </Item>\n//             <Item >\n//                 <SLink to=\"/search\">search</SLink>\n//             </Item>\n//         </List>\n//     </Header>\n// )\n\nexport default withRouter(HeaderTag)","import React from 'react';\nimport { HashRouter as Router , Route , Redirect , Switch } from 'react-router-dom';\nimport Home from 'Routes/Home'\nimport TV from 'Routes/TV'\nimport Search from 'Routes/Search'\nimport Detail from 'Routes/Detail'\nimport Header from 'Components/Header'\n\n\nexport default () => (\n    <Router>\n        <>\n            <Header></Header>\n            <Switch>\n                <Route path='/' exact component={Home}></Route>\n                <Route path='/tv' component={TV}></Route>\n                <Route path='/search' component={Search}></Route>\n                <Route path='/movie/:id' component={Detail} ></Route>\n                <Route path='/show/:id' component={Detail} ></Route>\n                <Redirect from='*' to='/'></Redirect>\n            </Switch>\n        </>\n    </Router>\n)","import {createGlobalStyle} from 'styled-components'\nimport reset from 'styled-reset'\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20,20,20,1);\n        color:#FFF;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;","import React , { Component } from 'react';\nimport Router from 'Components/Router'\nimport GlobalStyles from 'Components/GlobalStyles'\n\nclass App extends Component {\n    render() {\n        return (\n            <>  \n                <Router></Router>\n                <GlobalStyles></GlobalStyles>\n            </>\n        )\n    }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n\n"],"sourceRoot":""}